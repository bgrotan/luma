This changelog will mainly contain changes made between different tags in the
master branch. Changes made in the devlopment branch is documented in the git
log.

2011-03-14	Einar Uvsløkk <einar.uvslokk@linux.com>
	This branch marks the end of sprint 3. (Luma v3.0.3-sprint3)
	
	Features:
	* Browser-plugin:
	The Browser plugin now supports editing entries
	* Plugin-support:
	Luma is now able to load plugins from the default plugin location.
	* Installation/Deployment:
	A simple installation procedure is included, making use of pythons own
	distutils module.

2011-03-01  Einar Uvsløkk  <einar.uvslokk@linux.com>
	This branch marks the end of sprint 2. (Luma v3.0.2-sprint2)
	
	Features:
	* Browser-plugin:
	The plugin is partly implemented, but not integrated into the
	application
	* Plugin-support:
	Plugin support is partly implemented. Loading plugins is working, but
	no 'real' plugins is present at runtime yet.
	* Settings:
	An extended QSettings class is implemented, with transparent support
	for loading and saving application  settings. Settings is loaded and
	saved from both the main window and the newly implemented settings
	dialog.
	* Language-support:
	Full translation is available for English and Norwegian, and can be
	changed from both the settings dialog and the application menu bar at
	runtime, without changing the application state.


2011-02-28  Einar Uvsløkk  <einar.uvslokk@linux.com>
	This branch marks the end of sprint 1. (Luma v3.0.1-sprint1)
	NB! This relase branch was tagged and created at the end of sprint 2, but
		still reflects the work done up until the end of sprint 1. It was
		created to document the development progression.
		
	Features:
	* MainWindow:
	Menu bar is restructured compared to Luma 2.4, following different
	platform HIGs. The plugin toolbar is implemented, no functionality
	yet. The logger window is implemented and displayes various logging
	levels,	using the builtin python logging module. About dialog is 
	implemented, and completely rewritten compared to Luma 2.4, inspired 
	by gtk and gnome
	* ServerDialog:
	GUI is implemented, support for reading and saving the server list is
	also implemented.
	* Language-support:
	Translation files is loaded dynamically. Uses the old translation
	files, which still works on parts of the application. The languages
	can be selected from the menu bar, which is populated dynamically on
	startup.

